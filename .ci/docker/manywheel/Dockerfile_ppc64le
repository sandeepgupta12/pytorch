# Use UBI 9.3 as base image
FROM registry.access.redhat.com/ubi9/ubi:9.3 AS base

# Install necessary dependencies
RUN dnf install -y \
    https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm && \
    dnf install -y git cmake ninja-build gcc-toolset-13 rust cargo \
    python3 python3-devel && \
    dnf clean all

# Set Python and pip aliases to use Python 3.9
RUN ln -sf /usr/bin/python3 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip

#RUN ln -s requirements.txt .ci/docker/manywheel/requirements.txt


#COPY requirements.txt .
# Install Python packages via pip
RUN pip install wheel setuptools pyyaml typing_extensions expecttest

#RUN source /opt/rh/gcc-toolset-13/enable && pip install -r requirements.txt

#RUN source /opt/rh/gcc-toolset-13/enable
SHELL ["/bin/bash", "-c"]
RUN source /opt/rh/gcc-toolset-13/enable && pip install astunparse \
expecttest>=0.2.1 \
hypothesis \
numpy \
psutil \
pyyaml \
requests \
setuptools<=72.1.0 \
types-dataclasses \
typing-extensions>=4.10.0 \
sympy==1.13.1 \
filelock \
networkx \
jinja2 \
fsspec \
lintrunner  \
ninja \
packaging \
optree>=0.13.0


# Copy the PyTorch source code into the container
COPY . /workspace/pytorch

# Copy the build script and make it executable
COPY manywheel/build_scripts/ppc64le-build.sh /ppc64le-build.sh
RUN chmod +x /ppc64le-build.sh

# Verify permissions and ensure Unix line endings
RUN dos2unix /ppc64le-build.sh || sed -i 's/\r$//' /ppc64le-build.sh
RUN chmod +x /ppc64le-build.sh

# Final stage
FROM base AS final

# Set the working directory
WORKDIR /workspace/pytorch

# Use CMD to run the script
CMD ["/ppc64le-build.sh"]
