#!/usr/bin/env bash

set -e -u

trap cleanup EXIT

token_file=registration-token.json

# Function to clean up and unregister the runner
cleanup() {
    echo "Cleaning up temporary files..."
    [ -f "$token_file" ] && rm -f "$token_file"
    [ -f "runner-id.json" ] && rm -f "runner-id.json"

    echo "Unregistering the runner from GitHub..."
    ACCESS_TOKEN="$(cat /run/runner_secret)"
    runner_id=$(curl -s \
        -H "Accept: application/vnd.github.v3+json" \
        -H "Authorization: Bearer ${ACCESS_TOKEN}" \
        "https://api.github.com/repos/${OWNER}/${REPO}/actions/runners" | \
        jq --raw-output '.runners[] | select(.name=="'"${NAME}"'") | .id')

    if [ -n "$runner_id" ]; then
        curl -s \
            -X DELETE \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            "https://api.github.com/repos/${OWNER}/${REPO}/actions/runners/$runner_id"
        echo "Runner unregistered successfully."
    else
        echo "Warning: Runner ID for ${NAME} not found. It may already be removed."
    fi

    unset ACCESS_TOKEN runner_id
}

# Fetch GitHub access token
if [ ! -f /run/runner_secret ]; then
    echo "Error: Access token file not found at /run/runner_secret."
    exit 1
fi


ACCESS_TOKEN="$(cat /run/runner_secret)"

# Generate registration token
curl \
        -X POST \
        -H "Accept: application/vnd.github.v3+json" \
        -H "Authorization: Bearer ${ACCESS_TOKEN}" \
        "https://api.github.com/repos/${OWNER}/${REPO}/actions/runners/registration-token" \
        -o "$token_file"
 
unset ACCESS_TOKEN

# register runner as ephemeral runner
# it does one job, stops and unregisters
registration_token=$(jq --raw-output .token "$token_file")

./config.sh \
        --unattended \
        --ephemeral \
        --url "https://github.com/${OWNER}/${REPO}" \
        --token "${registration_token}" \
        --name "${NAME}" \
        --no-default-labels \
        --labels self-hosted,linux.ppc64le

unset registration_token
rm -f "$token_file"

# Run one job.
./run.sh

echo "Ephemeral runner workflow completed."
